CTR_BUILDER_NAME=ssh-sandbox-builder

TEMPLATE_DOCKERFILE="Dockerfile.template"
TARGET_DOCKERFILE="Dockerfile"
PACKAGES="curl nmap-ncat"
APPS="sh ls curl ncat"

ctr_create() {
  podman run --detach --rm --name $CTR_BUILDER_NAME alpine sh -c \
    'while true; do sleep 1000; done'
}

ctr_exec() {
  podman exec $CTR_BUILDER_NAME /bin/sh -c "$1"
}


get_libs() {
  for app in $1; do
    ctr_exec "ldd $app" 
  done \
    | sed 's!^[^/]*\(/[^ ]*\) .*!\1!' | sort -u
}

cp $TEMPLATE_DOCKERFILE $TARGET_DOCKERFILE

ctr_create

ctr_exec "apk add $PACKAGES"

APPS=$(ctr_exec "which $APPS")

# Get all required libs
LIBS=$(get_libs "$APPS")

echo -e "\n# autogenerated by SSH Sandbox Builder" >> $TARGET_DOCKERFILE
echo "RUN apk add $PACKAGES" >> $TARGET_DOCKERFILE

for lib in $LIBS $APPS; do
  echo "RUN mkdir -p /chroot$(dirname $lib)"
done | sort -u >> $TARGET_DOCKERFILE

for lib in $LIBS $APPS; do
  echo "RUN cp $lib /chroot$lib"
done | sort -u >> $TARGET_DOCKERFILE

echo "ENV PATH=$(echo $APPS | tr ' ' ':')" >> $TARGET_DOCKERFILE

podman stop --time 1 $CTR_BUILDER_NAME 2> /dev/null
podman rm $CTR_BUILDER_NAME
